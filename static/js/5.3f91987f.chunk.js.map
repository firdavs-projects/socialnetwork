{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","HOC/withAuthRedirect.js"],"names":["module","exports","Dialog","props","activeClassName","s","active","to","id","name","Message","className","message","src","alt","messageItem","maxLength100","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogs","items","dialogsPage","map","o","messages","absolute","newmessage","formData","sendMessage","newMessageBody","compose","connect","state","dispatch","sendMessageCreator","Componenta","RedirectComponent","this","isAuth","Component","auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,4BAA4B,SAAW,4B,2JCWzMC,EARA,SAACC,GACZ,OACI,8BACI,cAAC,IAAD,CAASC,gBAAiBC,IAAEC,OAAQC,GAAE,mBAAcJ,EAAMK,IAA1D,SAAiEL,EAAMM,UCSpEC,EAbC,SAACP,GACb,OACI,sBAAKQ,UAAWN,IAAEO,QAAlB,UACI,8BACI,qBAAKC,IAAI,oEAAoEC,IAAI,OAErF,qBAAKH,UAAWN,IAAEU,YAAlB,SACKZ,EAAMS,c,kCCLjBI,EAAeC,YAAiB,KAwBvBC,EAJUC,YAAU,CAC/BC,KAAM,wBADeD,EAlBL,SAAChB,GACjB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBP,KAAK,iBACLmB,YAAY,yBAGpB,8BACI,kDCmBDC,EAhCC,SAAC1B,GAMb,OACI,sBAAKQ,UAAWN,IAAEyB,QAAlB,UACI,sBAAKnB,UAAWN,IAAE0B,MAAlB,UAEQ5B,EAAM6B,YAAYF,QAAQG,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAmBzB,KAAMyB,EAAEzB,KAAMD,GAAI0B,EAAE1B,IAA1B0B,EAAE1B,OAEtD,0BAEJ,gCACI,sBAAKG,UAAWN,IAAE8B,SAAlB,UAEQhC,EAAM6B,YAAYG,SAASF,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAoBtB,QAASsB,EAAEtB,SAAjBsB,EAAE1B,OAExD,0BAEJ,qBAAKG,UAAWN,IAAE+B,SAAlB,SACI,qBAAKzB,UAAWN,IAAEgC,WAAlB,SAEI,cAAC,EAAD,CAAkBhB,SAtBrB,SAACiB,GACdnC,EAAMoC,YAAYD,EAASE,8BCWpBC,sBACXC,aAfoB,SAACC,GACrB,MAAO,CACHX,YAAaW,EAAMX,gBAIA,SAACY,GACxB,MAAO,CACHL,YAAa,SAAC3B,GACVgC,EAASC,YAAmBjC,UCXR,SAACkC,GAAgB,IACvCC,EADsC,uKAGpC,OAAKC,KAAK7C,MAAM8C,OAGT,cAACH,EAAD,eAAeE,KAAK7C,QAFhB,cAAC,IAAD,CAAUI,GAAG,eAJY,GACZ2C,aAchC,OADmCR,aAJH,SAACC,GAAD,MAAY,CACxCM,OAAQN,EAAMQ,KAAKF,UAGYP,CAAiCK,KDEzDN,CAGbZ","file":"static/js/5.3f91987f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2DUbK\",\"active\":\"Dialogs_active__1ivz6\",\"message\":\"Dialogs_message__3JSRH\",\"messageItem\":\"Dialogs_messageItem__1WzDb\",\"newmessage\":\"Dialogs_newmessage__1La7m\",\"textarea\":\"Dialogs_textarea__3Ibbm\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink activeClassName={s.active} to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div>\r\n                <img src=\"https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png\" alt=\"\" />\r\n            </div>\r\n            <div className={s.messageItem}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../Utils/Validators/validator'\r\nimport { Textarea } from '../../FormControls/Controls'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength100]}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Enter your message\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(MessageForm)\r\n\r\nexport default MessageReduxForm\r\n","import React from 'react'\r\nimport Dialog from './Dialog/Dialog'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport MessageReduxForm from './MessageForm/MessageForm'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.items}>\r\n                {\r\n                    props.dialogsPage.dialogs.map(o => <Dialog key={o.id} name={o.name} id={o.id} />)\r\n                }\r\n                <hr />\r\n            </div>\r\n            <div >\r\n                <div className={s.messages}>\r\n                    {\r\n                        props.dialogsPage.messages.map(o => <Message key={o.id} message={o.message} />)\r\n                    }\r\n                    <hr />\r\n                </div>\r\n                <div className={s.absolute}>\r\n                    <div className={s.newmessage}>\r\n\r\n                        <MessageReduxForm onSubmit={onSubmit} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect'\r\nimport { sendMessageCreator } from '../../Redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => {\r\n            dispatch(sendMessageCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport const withAuthRedirect = (Componenta) => {\r\n    class RedirectComponent extends Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Redirect to='/login' />\r\n\r\n            return <Componenta{...this.props} />\r\n        }\r\n    }\r\n\r\n    const mapStateToPropsRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n\r\n    let connectAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n    return connectAuthRedirectComponent\r\n}"],"sourceRoot":""}